<!doctype html>
<html lang="en">
  <head>
    <title>Title</title>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <!-- Bootstrap CSS v5.2.1 -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
      crossorigin="anonymous"
    />
  </head>

  <body>
    <%-include('./partials/admin-sidenav') %>


    <div class="details">
      <div class="recentOrders">
        <h1>Order List</h1>
        <div class="cardHeader" style="width: 1250px;">
            <% if(order.length> 0) { %> 
          <table class="table  table-borderless">
            <thead>
              <tr>
                <th scope="col">Sr No.</th>
                <th scope="col">Order ID</th>
                <th scope="col">Customer Name</th>
                <th scope="col">Ordered Date</th>
                <th scope="col">Status</th>
                <th scope="col">Payment Method</th>
                <th scope="col">Payment Status</th>
                <th scope="col"></th>
                <th scope="col">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% for (let i = 0; i < order.length; i++) { %>
                <tr>
                  <td><%= i + 1 %></td>
                  <td><%= order[i]._id %></td>
                  <td>
                    <%= order[i].Address.Name  %>
                  </td>
                  
                  <td>
                    <% const orderDate = new Date(order[i].OrderDate); %>
                    <%= orderDate.toLocaleString('default', { month: 'short' }) %>
                    <%= orderDate.getDate() %>,
                    <%= orderDate.getFullYear() %>
                    <%= orderDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %>
                  </td>
                  <td>
                    <% if (order[i].Status === "Return Pending") { %>
                      <button type="button" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#returnModal<%= i %>">Return</button>
                    <% } else if (order[i].Status === 'Cancelled') { %>
                      Cancelled
                      <% } else if (order[i].Status === 'Return Canceled') { %>
                        Return Canceled
                        <% } else if (order[i].Status === 'Return Accepted') { %>
                          Returned 
                    <% } else { %>
                      <% if (order[i].Status !== 'Return Pending') { %>
                        <% const currentStatus = order[i].Status || 'Order Placed'; %>
                        <select class="form-select" id="statusSelect<%= i %>" onchange="updateOrderStatus('<%= order[i]._id %>', this.value)">
                          <option value="Order Placed" <%= currentStatus === 'Order Placed' ? 'selected' : '' %>>Order Placed</option>
                          <option value="Shipped" <%= currentStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                          <option value="Delivered" <%= currentStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                          <option value="Rejected" <%= currentStatus === 'Rejected' ? 'selected' : '' %>>Rejected</option>
                        </select>
                      <% } %>
                    <% } %>
                  </td>
                  
                  
                  <td>
                    <%= order[i].PaymentMethod %>
                  </td>
                  <td>
                    <%= order[i].PaymentStatus %>
                  </td>
                  <td>
                
                  </td>
                  <td>
                    <a href="/admin/orders/details/<%= order[i]._id %>" class="btn btn-dark btn-sm">
                      View Details
                    </a>
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
    
    
        
    
    
          <% } else { %>
            <div class="card text-center">
              <div class="card-body">
                <h5 class="card-title">No Orders Yet</h5>
                <p class="card-text">There are currently no orders available.</p>
              </div>
            </div>
            <% } %>
          
        </div>
    
       <!-- Pagination -->
       <% if (order.length > 0) { %>
        <div class="d-flex justify-content-between m-auto w-50 align-items-center mt-3">
            <p>Showing <%= (currentPage - 1) * perPage + 1 %>-
                <% if(currentPage === totalPages){%>
                    <%=totalCount%>
                    <%}else{%>
                  <%= currentPage * perPage  %>
                  <%}%>
                   results from <%= totalCount %></p>
                <ul class="pagination">
                  <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                      <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                    </li>
                  <% } %>
                </ul>
              </div>
              <% } %>
      
        
        
    
    
      </div>
    </div>
    </div>
    
    
    <% for (let i = 0; i < order.length; i++) { %>
      <div class="modal fade" id="returnModal<%= i %>" tabindex="-1"  aria-labelledby="returnModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="returnModalLabel">Return Request Confirmation</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <p>Are you sure you want to accept the return request?</p>
              <% if (order[i].ReturnRequest) { %>
                <p style="color: rgb(10, 10, 70);">Return Reason: <%= order[i].ReturnRequest.reason %></p>
              <% } %>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-danger" onclick="cancelReturn('<%= order[i]._id %>')">Cancel Return Request</button>
              <button type="button" class="btn btn-dark" onclick="acceptReturn('<%= order[i]._id %>')">Accept Return</button>
            </div>
          </div>
        </div>
      </div>
    <% } %>

          
  
    
    <script>
        function updateOrderStatus(orderId, newStatus) {
      fetch(`/admin/orders/updateOrderStatus/${orderId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ status: newStatus }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert('Order status updated successfully!');
          } else {
            alert('Failed to update order status.');
          }
        })
        .catch((error) => {
          console.error('Error:', error);
        });
    }
    
    
    //accept return request
    function acceptReturn(orderId) {
      fetch(`/admin/orders/acceptReturn/${orderId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert('Return request accepted successfully!');
            location.reload();
          } else {
            alert('Failed to accept return request.');
          }
        })
        .catch((error) => {
          console.error('Error:', error);
        });
    }
    
    
    //cancel return 
    function cancelReturn(orderId) {
      fetch(`/admin/orders/cancelReturn/${orderId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert('Return request canceled successfully!');
            location.reload();
          } else {
            alert('Failed to cancel return request.');
          }
        })
        .catch((error) => {
          console.error('Error:', error);
        });
    }
    </script>
    
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
      integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
